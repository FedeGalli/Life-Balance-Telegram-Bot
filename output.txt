STARTING RECORDING


2025-01-07 15:03:48,698 - apscheduler.scheduler - INFO - Scheduler started
2025-01-07 15:03:48,701 - telegram.ext._application - INFO - Application started
2025-01-07 17:49:59,994 - telegram.ext._updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-01-07 17:49:59,995 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-01-07 17:50:05,080 - telegram.ext._updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-01-07 17:50:05,081 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-01-07 17:50:51,501 - telegram.ext._application - INFO - Application is stopping. This might take a moment.
2025-01-07 17:50:51,502 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-01-07 17:50:51,513 - telegram.ext._application - INFO - Application.stop() complete
2025-01-07 18:04:50,795 - apscheduler.scheduler - INFO - Scheduler started
2025-01-07 18:04:50,798 - telegram.ext._application - INFO - Application started
2025-01-07 18:06:39,160 - telegram.ext._application - INFO - Application is stopping. This might take a moment.
2025-01-07 18:06:39,160 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-01-07 18:06:39,171 - telegram.ext._application - INFO - Application.stop() complete
2025-01-07 18:08:22,068 - apscheduler.scheduler - INFO - Scheduler started
2025-01-07 18:08:22,070 - telegram.ext._application - INFO - Application started
2025-01-07 18:21:03,243 - telegram.ext._application - INFO - Application is stopping. This might take a moment.
2025-01-07 18:21:03,244 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-01-07 18:21:03,255 - telegram.ext._application - INFO - Application.stop() complete
2025-01-07 18:22:46,618 - apscheduler.scheduler - INFO - Scheduler started
2025-01-07 18:22:46,621 - telegram.ext._application - INFO - Application started
2025-01-10 18:09:11,003 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-10 18:09:11,004 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-10 18:09:12,009 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-10 18:09:12,010 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-10 18:09:13,516 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-10 18:09:13,516 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-10 18:09:15,778 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-10 18:09:15,779 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-10 18:09:19,166 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-10 18:09:19,167 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-10 18:09:24,256 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: All connection attempts failed
2025-01-10 18:09:24,257 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
anyio._backends._asyncio.ExceptionGroup: 2 exceptions were raised in the task group:
----------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 164, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
  File "/usr/local/lib/python3.9/dist-packages/anyio/_backends/_asyncio.py", line 1691, in connect_tcp
    await get_running_loop().create_connection(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1056, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1041, in create_connection
    sock = await self._connect_sock(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 955, in _connect_sock
    await self.sock_connect(sock, address)
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 502, in sock_connect
    return await fut
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 507, in _sock_connect
    sock.connect(address)
OSError: [Errno 101] Network is unreachable
----------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 164, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
  File "/usr/local/lib/python3.9/dist-packages/anyio/_backends/_asyncio.py", line 1691, in connect_tcp
    await get_running_loop().create_connection(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1056, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1041, in create_connection
    sock = await self._connect_sock(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 955, in _connect_sock
    await self.sock_connect(sock, address)
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 502, in sock_connect
    return await fut
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 507, in _sock_connect
    sock.connect(address)
OSError: [Errno 101] Network is unreachable


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 222, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: All connection attempts failed
2025-01-12 11:45:34,176 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:34,177 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:35,187 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:35,188 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:36,698 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:36,699 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:38,960 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:38,961 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:42,348 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:42,349 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:47,426 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:47,427 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:55,037 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:45:55,038 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:46:06,449 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:46:06,450 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:46:23,562 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:46:23,563 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:46:49,227 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:46:49,228 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:47:19,268 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:47:19,269 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:47:49,308 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-12 11:47:49,309 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:01:56,211 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:01:56,212 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:01:57,222 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:01:57,223 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:01:58,734 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:01:58,735 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:00,997 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:00,998 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:04,385 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:04,386 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:09,463 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:09,468 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:17,078 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:17,079 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:28,491 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:28,492 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:45,604 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:02:45,605 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:03:11,269 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:03:11,270 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:03:41,310 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:03:41,311 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:06:44,007 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:06:44,007 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:06:45,018 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:06:45,019 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-18 00:06:46,537 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: All connection attempts failed
2025-01-18 00:06:46,538 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
anyio._backends._asyncio.ExceptionGroup: 2 exceptions were raised in the task group:
----------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 164, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
  File "/usr/local/lib/python3.9/dist-packages/anyio/_backends/_asyncio.py", line 1691, in connect_tcp
    await get_running_loop().create_connection(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1056, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1041, in create_connection
    sock = await self._connect_sock(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 955, in _connect_sock
    await self.sock_connect(sock, address)
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 502, in sock_connect
    return await fut
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 507, in _sock_connect
    sock.connect(address)
OSError: [Errno 101] Network is unreachable
----------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 164, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
  File "/usr/local/lib/python3.9/dist-packages/anyio/_backends/_asyncio.py", line 1691, in connect_tcp
    await get_running_loop().create_connection(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1056, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1041, in create_connection
    sock = await self._connect_sock(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 955, in _connect_sock
    await self.sock_connect(sock, address)
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 502, in sock_connect
    return await fut
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 507, in _sock_connect
    sock.connect(address)
OSError: [Errno 101] Network is unreachable


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 222, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: All connection attempts failed
2025-01-23 05:57:48,964 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:57:48,965 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:57:49,975 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:57:49,975 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:57:51,486 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:57:51,487 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:57:53,749 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:57:53,749 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:57:57,137 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:57:57,138 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:58:02,215 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:58:02,215 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:58:09,827 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:58:09,828 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:58:21,239 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:58:21,240 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:58:38,352 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 05:58:38,353 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:39,506 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:39,507 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:40,517 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:40,518 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:42,029 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:42,030 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:44,292 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:44,293 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:47,681 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:47,682 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:52,759 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:14:52,760 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:15:00,371 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:15:00,372 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:15:11,784 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:15:11,785 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:15:28,897 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:15:28,898 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:15:54,562 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:15:54,563 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:16:24,604 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:16:24,605 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:16:54,645 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-23 19:16:54,646 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:41:58,585 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:41:58,586 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:41:59,597 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:41:59,597 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:01,108 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:01,109 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:03,371 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:03,372 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:06,760 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:06,760 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:11,838 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:11,839 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:19,450 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:19,451 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:30,862 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:30,863 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:47,976 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:42:47,977 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:43:13,640 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:43:13,641 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:43:43,682 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-29 10:43:43,683 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-30 14:27:59,541 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-30 14:27:59,542 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-30 14:28:00,552 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-30 14:28:00,553 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-30 14:28:02,064 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-30 14:28:02,064 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-30 14:28:04,326 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-30 14:28:04,327 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-01-31 22:28:12,417 - telegram.ext._updater - INFO - Flood control exceeded. Retry in 5 seconds
2025-01-31 22:28:18,070 - telegram.ext._updater - ERROR - Error while getting Updates: Bad Gateway
2025-01-31 22:28:18,071 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 332, in _request_wrapper
    raise NetworkError(description or "Bad Gateway")
telegram.error.NetworkError: Bad Gateway
2025-02-01 00:15:13,056 - telegram.ext._updater - INFO - Flood control exceeded. Retry in 5 seconds
2025-02-03 17:45:08,903 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:08,904 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:09,915 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:09,916 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:11,425 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:11,426 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:13,688 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:13,689 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:17,077 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:17,078 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:22,156 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:22,156 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:29,762 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:29,763 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:41,175 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:41,176 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:58,289 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:45:58,290 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:46:23,939 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:46:23,940 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-03 17:46:53,996 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: All connection attempts failed
2025-02-03 17:46:53,997 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
anyio._backends._asyncio.ExceptionGroup: 2 exceptions were raised in the task group:
----------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 164, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
  File "/usr/local/lib/python3.9/dist-packages/anyio/_backends/_asyncio.py", line 1691, in connect_tcp
    await get_running_loop().create_connection(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1056, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1041, in create_connection
    sock = await self._connect_sock(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 955, in _connect_sock
    await self.sock_connect(sock, address)
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 502, in sock_connect
    return await fut
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 507, in _sock_connect
    sock.connect(address)
OSError: [Errno 101] Network is unreachable
----------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 164, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
  File "/usr/local/lib/python3.9/dist-packages/anyio/_backends/_asyncio.py", line 1691, in connect_tcp
    await get_running_loop().create_connection(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1056, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1041, in create_connection
    sock = await self._connect_sock(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 955, in _connect_sock
    await self.sock_connect(sock, address)
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 502, in sock_connect
    return await fut
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 507, in _sock_connect
    sock.connect(address)
OSError: [Errno 101] Network is unreachable


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 222, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: All connection attempts failed
2025-02-03 17:52:27,356 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: All connection attempts failed
2025-02-03 17:52:27,357 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
anyio._backends._asyncio.ExceptionGroup: 2 exceptions were raised in the task group:
----------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 164, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
  File "/usr/local/lib/python3.9/dist-packages/anyio/_backends/_asyncio.py", line 1691, in connect_tcp
    await get_running_loop().create_connection(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1056, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1041, in create_connection
    sock = await self._connect_sock(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 955, in _connect_sock
    await self.sock_connect(sock, address)
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 502, in sock_connect
    return await fut
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 507, in _sock_connect
    sock.connect(address)
OSError: [Errno 101] Network is unreachable
----------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 164, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
  File "/usr/local/lib/python3.9/dist-packages/anyio/_backends/_asyncio.py", line 1691, in connect_tcp
    await get_running_loop().create_connection(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1056, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.9/asyncio/base_events.py", line 1041, in create_connection
    sock = await self._connect_sock(
  File "/usr/lib/python3.9/asyncio/base_events.py", line 955, in _connect_sock
    await self.sock_connect(sock, address)
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 502, in sock_connect
    return await fut
  File "/usr/lib/python3.9/asyncio/selector_events.py", line 507, in _sock_connect
    sock.connect(address)
OSError: [Errno 101] Network is unreachable


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 222, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: All connection attempts failed
2025-02-04 00:57:13,739 - telegram.ext._updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-02-04 00:57:13,740 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 327, in polling_action_cb
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 3584, in get_updates
    await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 186, in connect_tcp
    addr_obj = ip_address(remote_host)
  File "/usr/lib/python3.9/ipaddress.py", line 53, in ip_address
    raise ValueError('%r does not appear to be an IPv4 or IPv6 address' %
ValueError: 'api.telegram.org' does not appear to be an IPv4 or IPv6 address

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/anyio/_core/_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "/usr/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.9/socket.py", line 953, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 60, in map_httpcore_exceptions
    yield
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 253, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 86, in handle_async_request
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_async/connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "/usr/local/lib/python3.9/dist-packages/httpcore/backends/asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/usr/lib/python3.9/contextlib.py", line 135, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python3.9/dist-packages/httpx/_transports/default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pi/Desktop/projects/Life-Balance-Telegram-Bot/main.py", line 392, in <module>
    main()
  File "/home/pi/Desktop/projects/Life-Balance-Telegram-Bot/main.py", line 388, in main
    application.run_polling()
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_application.py", line 694, in run_polling
    return self.__run(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_application.py", line 881, in __run
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_application.py", line 870, in __run
    loop.run_until_complete(self.initialize())
  File "/usr/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_application.py", line 376, in initialize
    await self.bot.initialize()
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 252, in initialize
    await super().initialize()
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 547, in initialize
    await self.get_me()
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 1677, in get_me
    return await super().get_me(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 692, in get_me
    result = await self._post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 422, in _post
    return await self._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/ext/_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/_bot.py", line 453, in _do_post
    return await request.post(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "/usr/local/lib/python3.9/dist-packages/telegram/request/_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno -3] Temporary failure in name resolution
2025-02-08 20:21:29,810 - apscheduler.scheduler - INFO - Scheduler started
2025-02-08 20:21:29,814 - telegram.ext._application - INFO - Application started
sys:1: RuntimeWarning: coroutine 'Updater.stop' was never awaited
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
